<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:request-config name="HTTP_Request_Configuration" host="0.0.0.0" port="8081" basePath="/api" doc:name="HTTP Request Configuration">
        <http:raml-api-configuration location="toyrnotus.raml"/>
    </http:request-config>
    
    <flow name="postorderFlow">
        <set-variable variableName="orderDetails" value="#[json:]" doc:name="Order Details"/>
        <logger message="#[&quot;new order details is &quot;+flowVars.orderDetails]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="a4c0f866-555d-493d-98eb-cb86f37609ab">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <enricher target="#[flowVars.hasStock]" doc:name="Message Enricher">
            <flow-ref name="checkToysStock" doc:name="checkToysStock"/>
        </enricher>
        <logger message="#[flowVars.hasStock]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.hasStock]">
                <flow-ref name="updateToysStock" doc:name="Flow Reference"/>
                <db:stored-procedure config-ref="MySQL_Configuration" autoGeneratedKeys="false" doc:name="insert data for order ">
                    <db:parameterized-query><![CDATA[call save_order_and_getOrderId(#[flowVars.orderDetails]);]]></db:parameterized-query>
                </db:stored-procedure>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	message: "Order created",
	orderId: payload[0].orderId[0]
}
	]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <set-payload value="{&quot;message&quot;:&quot;Some toys in your cart has not enough stock.&quot;}" doc:name="Set Payload"/>
                <set-property propertyName="http.status" value="400" doc:name="Property"/>
            </otherwise>
        </choice>

    </flow>
    <sub-flow name="checkToysStock">
        <set-variable variableName="hasStock" value="true" doc:name="set hasStock = true"/>
        <foreach collection="#[payload.orderLineItems]" doc:name="For Each">
            <logger message="#[payload]" level="INFO" doc:name="Logger"/>
            <set-variable variableName="orderQuantity" value="#[payload.quantity]" doc:name="Variable"/>
            <logger message="Order quantity = #[flowVars.orderQuantity]" level="INFO" doc:name="Logger"/>
            <http:request config-ref="HTTP_Request_Configuration" path="/toys/#[payload.toyId]" method="GET" doc:name="HTTP"/>
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <logger message="Toys has #[payload.quantity] in stock" level="INFO" doc:name="Logger"/>
            <choice doc:name="Choice">
                <when expression="#[payload.quantity &lt; flowVars.orderQuantity]">
                    <set-variable variableName="hasStock" value="false" doc:name="Variable"/>
                </when>
                <otherwise>
                    <logger message="Has enough stock for product ID = #[payload.toyId]" level="INFO" doc:name="Logger"/>
                </otherwise>
            </choice>
        </foreach>
        <set-payload value="#[flowVars.hasStock]" doc:name="Set Payload"/>
    </sub-flow>
        <sub-flow name="updateToysStock">

        <foreach collection="#[payload.orderLineItems]" doc:name="For Each">
            <logger message="#[payload]" level="INFO" doc:name="Logger"/>
            <set-variable variableName="orderQuantity" value="#[payload.quantity]" doc:name="Variable"/>
            <set-variable variableName="toyId" value="#[payload.toyId]" doc:name="toyId"/>
            <logger message="Toy #[flowVars.toyId] quantity = #[flowVars.orderQuantity]" level="INFO" doc:name="Logger"/>
            <http:request config-ref="HTTP_Request_Configuration" path="/toys/#[payload.toyId]" method="GET" doc:name="HTTP"/>
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <logger message="Toys has #[payload.quantity] in stock" level="INFO" doc:name="Logger"/>
            <set-payload value="{
	&quot;quantity&quot;: #[payload.quantity - flowVars.orderQuantity]
}" mimeType="application/json" doc:name="Set Payload"/>
            <logger message="#[payload]" level="INFO" doc:name="Logger"/>
            <http:request config-ref="HTTP_Request_Configuration" path="/toys/#[flowVars.toyId]" method="PATCH" doc:name="HTTP"/>

        </foreach>

    </sub-flow>
</mule>

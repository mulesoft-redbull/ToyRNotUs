<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:postorder.xml"/>
        <spring:import resource="classpath:global.xml"/>
    </spring:beans>
    <munit:test name="postorder-test-suite-postorderFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Database']"/>
            </mock:with-attributes>
            <mock:then-return payload="{ &quot;message&quot;: &quot;Order created&quot;, &quot;orderId&quot;: 58 }"/>
        </mock:when>
        <munit:set payload="{ &quot;orderLineItems&quot;: [ { &quot;toyId&quot;: 99, &quot;quantity&quot;:4, &quot;unitPrice&quot;: 25.95 } ], &quot;shippingAddress&quot;:{ &quot;fullName&quot;: &quot;Khun Savi&quot;, &quot;address1&quot;: &quot;54 North Sathorn&quot;, &quot;city&quot;: &quot;Bangkok&quot;, &quot;province&quot;: &quot;Bangkok&quot;, &quot;postcode&quot;: &quot;10500&quot;, &quot;telephone&quot;: &quot;+6623527866&quot; }, &quot;shippingCost&quot;: 50 }" doc:name="Set Message" mimeType="binary/octet-stream">
        </munit:set>
        <flow-ref name="postorderFlow" doc:name="postorderFlow"/>
        <munit:assert-on-equals expectedValue="{ &quot;message&quot;: &quot;Order created&quot;, &quot;orderId&quot;: 65 }" actualValue=" #[message.payloadAs(java.lang.String)]" doc:name="Assert Equals"/>
    </munit:test>
</mule>
